# vim:set noexpandtab:

#
# This file is part of the 'org.octris.core' package.
#
# (c) Harald Lapp <harald@octris.org>
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.
#

#**
# This is the makefile used to all administrative tasks regarding a project based on the OCTRiS framework
# including the OCTRiS framework itself. This makefile is not intended to be called directly. Instead it's 
# included in the project's own Makefiles.
#
# @octdoc       h:./Makefile.core
# @copyright    copyright (c) 2006-2013 by Harald Lapp
# @author       Harald Lapp <harald@octris.org>
#**

SHELL:=$(shell which bash)
CURSYMDIR:=$(shell pwd)

#**
# The target help displays general information and available makefile targets.
#
# @octdoc       t:Makefile/help
#**
help::
	@echo ""
	@echo "OCTRiS Application Framework"
	@echo "copyright (c) 2006-2013 by Harald Lapp <harald@octris.org>"
	@echo ""
	@echo "targets for project '$(project)'"
	@echo ""
	@echo "help             this help text"
	@echo ""
	@echo "check            check dependencies"
	@if [ "$(project)" = "org.octris.core" ]; then \
		echo "create           create new project"; \
	fi
	@echo "install          install project"
	@echo "uninstall        uninstall project"
	@echo "test             run all tests of a project"
	@echo "lint             execute lint tool"
	@echo ""
	@echo "cleanup          cleanup cache files"
	@echo "compile          compile template files"

#**
# Check dependencies of an application based OCTRiS framework.
#
# @octdoc       t:Makefile/check
#**
check:
	@if [ "`which php`" = "" ]; then \
		echo "no PHP found in search path"; \
		exit 1; \
	fi; \
	$(CURSYMDIR)/../../tools/project/check.php

#**
# This target is used for installing an application. It's depends on the Target ~createdirs~ and creates symbolic 
# links for all required project files and directories to fit the directory structure required by the OCTRiS 
# framework.
#
# @octdoc       t:Makefile/install
# @see          Makefile/createdirs
#**
install:: createdirs
	@ln -snf $(CURSYMDIR)/data				../../data/$(project)
	@ln -snf $(CURSYMDIR)/etc				../../etc/$(project)
	@ln -snf $(CURSYMDIR)/libs				../../libs/$(project)
	@ln -snf $(CURSYMDIR)/locale			../../locale/$(project)
	@ln -snf $(CURSYMDIR)/templates			../../templates/$(project)
	@ln -snf $(CURSYMDIR)/tools				../../tools/$(project)
	@if [ "$(project)" != "org.octris.core" ]; then \
		if [ -e $(CURSYMDIR)/host/index.php ]; then \
			ln -snf $(CURSYMDIR)/host/index.php					../../host/$(project)/index.php; \
		fi; \
		if [ -e $(CURSYMDIR)/host/robots.txt ]; then \
			ln -snf $(CURSYMDIR)/host/robots.txt				../../host/$(project)/robots.txt; \
		fi; \
		if [ -d $(CURSYMDIR)/host/error ]; then \
			ln -snf $(CURSYMDIR)/host/error						../../host/$(project)/error; \
		fi; \
		if [ -d $(CURSYMDIR)/resources ]; then \
			ln -snf $(CURSYMDIR)/resources						../../host/$(project)/resources; \
		fi; \
	fi; \

#**
# Remove installation directories -- remove symlinks.
#
# @octdoc       t:Makefile/uninstall
#**
uninstall: onlyroot
	@rm -rf ../../cache/$(project)
	@rm -f 	../../data/$(project)
	@rm -rf ../../doc/$(project)
	@rm -f 	../../etc/$(project)
	@rm -f 	../../libs/$(project)
	@rm -f 	../../locale/$(project)
	@rm -rf ../../log/$(project)
	@rm -f 	../../templates/$(project)
	@rm -f 	../../tools/$(project)
	@if [ "$(project)" != "org.octris.core" ]; then \
		rm -f ../../host/$(project)/index.php; \
		rm -f ../../host/$(project)/robots.txt; \
		rm -f ../../host/$(project)/resources; \
		if [ -d ../../hots/$(project)/resources_ltk ]; then \
			rm -f ../../host/$(project)/resources_ltk; \
		fi; \
		rm -rf ../../host/$(project); \
	fi; \

#**
# Execute tests of a project.
#
# @octdoc       t:Makefile/test
#**
test:
	@if [ "$(filter)" != "" ]; then \
		phpunit --tap --filter $(filter) $(CURSYMDIR)/tests/; \
	else \
		phpunit --tap $(CURSYMDIR)/tests/; \
	fi; \

#**
# Clear template and data caches of project.
#
# @octdoc       t:Makefile/cleanup
#**
cleanup::
	@rm -rf ../../cache/$(project)/data/*
	@rm -rf ../../cache/$(project)/templates_c/*

#**
# Clear template cache and compile all template files.
#
# @octdoc       t:Makefile/compile
#**
compile:
	@rm -rf ../../cache/$(project)/templates_c/*
	@$(CURSYMDIR)/../../tools/org.octris.core/project/compile.php -p $(project)

#**
# Create directory structure
#
# @octdoc       t:Makefile/createdirs
#**
createdirs:
	@if [ "$(project)" = "org.octris.core" ]; then \
		mkdir -p ../../cache; \
		mkdir -p ../../data; \
		mkdir -p ../../etc; \
		mkdir -p ../../host; \
		mkdir -p ../../libs; \
		mkdir -p ../../locale; \
		mkdir -p ../../log; \
		mkdir -p ../../templates; \
		mkdir -p ../../tools; \
	elif [ ! -d ../../host ]; then \
		echo ""; \
		echo "You have to install 'org.octris.core' first!"; \
		echo ""; \
		exit 1; \
	elif [ -d $(CURSYMDIR)/host ]; then \
		mkdir -p ../../host/$(project); \
		mkdir -p -m 0777 ../../host/$(project)/libsjs; \
		mkdir -p -m 0777 ../../host/$(project)/styles; \
		mkdir -p -m 0777 ../../log/$(project); \
	fi; \
	mkdir -p -m 0777 ../../cache/$(project)/data; \
	mkdir -p -m 0777 ../../cache/$(project)/templates_c; \

#**
# Checks if user is root. Exits makefile, if user is not root.
#
# @octdoc       t:Makefile/onlyroot
#**
onlyroot:
	@if [ "$(shell whoami)" != "root" ]; then \
		echo ""; \
		echo "This target can only be run by root user"; \
		echo ""; \
		exit 1; \
	fi

#**
# Execute lint tool.
#
# @octdoc       t:Makefile/lint
#**
lint:
	@$(CURSYMDIR)/../../tools/org.octris.core/project/lint.php -p $(project)
