Parameter importing and validating using validation schemas
===========================================================

(c) 2010 by Harald Lapp <harald@octris.org>

The OCTRiS framework provides powerful functionality for validating parameters -- request parameters, server
and environment variables, command line options. The OCTRiS validation schemas support validation from simple values
to complex arrays.

Field validation rules
~~~~~~~~~~~~~~~~~~~~~~

    *   type -- (required) type of field
        the type the field must have to be valid

_Example #1:_

Example shows required schema for validating login credentials:

..  source: php

    use \org\octris\core\validate as validate;
    
    $schema = array(
        'default' => array(                        // entry point, always required!
            'type'          => validate::T_OBJECT,
            'properties'    => array(
                'username' => array(                // field: username
                    'type'  => validate::T_PRINT
                ),
                'password' => array(                // field: password
                    'type'  => validate::T_PRINT
                )
            )
        )
    );

_Example: #2:_

Example shows required schema for user-registration data containing a list of up to 5 website URLs:

..  source: php

    use \org\octris\core\validate as validate;

    $schema = array(
        'default' => array(
            'type'       => validate::T_OBJECT,
            'properties' => array(
                'username' => array(
                    'type'  => validate::T_PRINT
                ),
                'password' => array(
                    'type'  => validate::T_PRINT,
                ),
                'password2' => array(           // a second password field to compare to
                    'type'      => validate::T_CALLBACK,
                    'options'   => array(
                        'callback' => function($value) {
                            return ($value === $_POST->get('password')->value);
                        }
                    ),
                    'required'  => true
                ),
                'websites' => array(
                    'type'      => validate::T_ARRAY,
                    'items'     => array('url'),
                    'min_items' => 0,
                    'max_items' => 5
                )
            )
        ),
        
        'url' => array(                         // name of schema: url
            'url' => array(
                'type' => validate::T_URL
            )
        )
    )

Validation chaining
~~~~~~~~~~~~~~~~~~~

Validation chaining is achieved by the 'chain' validator, which accepts
an array with multiple types/options to validate in chain as option parameter. 
The validation chain stops, if a validator fails or after all steps of the chain
succeeded.

In the example below validation chaining is used to validate usernames first if 
it contains only printable characters and additionally if it doesn't match invalid
names:

..  source: php

    use \org\octris\core\validate as validate;

    $schema = array(
        'default' => array(
            'type'       => validate::T_OBJECT,
            'properties' => array(
                'username' => array(
                    'type'      => validate::T_CHAIN,
                    'options'   => array(
                        'chain' => array(
                            array(
                                'type'      => validate::T_PRINT
                            ),
                            array(
                                'type'      => validate::T_CALLBACK,
                                'options'   => array(
                                    'callback'  => function($value) {
                                        return !in_array($value, array('admin', 'chef'));
                                    }
                                )
                            )
                        )
                    )
                )
            )
        )
    )
    
